--- 
title: "6900 sp21"
author: "Nathan Floyd"
date: "3/8/21"
site: bookdown::bookdown_site
documentclass: book
biblio-style: apalike
link-citations: yes
description: "This is Assignment 7 for WILD 6900 sp21, it will also serve as the basis of my final project."
---

#Introduction

This book is a collection of activities setting forth the structure of a database that will be adapted for use in my master's project. It also serves as the final project for the spring 2021 WILD 6900 class.  

<!--chapter:end:index.Rmd-->


```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE)

```
  

This Database is based on the data that will be gathered throughout my Masterâ€™s project. I am still finalizing the exact data that we will be collecting, so I will need to update this database when that is complete. That will happen in the next week so it should not interfere with subsequent activities in this class. 

The structure of my database is determined by the type of data we will be collecting and when that data will be collected. As of now I will have 5 different tables in my database, a master list of collared lambs, collar data, sheep band data, tagging information, and kill site investigation results. 

![DatabaseStructure.png](DatabaseStructure.png)



### The folowing are the steps I used to create my database in SQL Using R  


#### First I loaded the required package into my library  

```{r library}

library(DBI)

```


#### Then I connected R to my desired file location and named the database

```{r}

fpd <- dbConnect(RSQLite::SQLite(),"~/WILD6900sp21/Floyd_project_database/Floyd_project_database.db")

```

#### My first table is the master table. The primary key for this table is lamb_id, and all of the other tables are connected to each other directly, or indirectly through through this key.

# Master Table:

```{r Master table, eval=FALSE}

dbExecute(fpd, "CREATE TABLE Master (
  lamb_id varchar(5) NOT NULL,
  sex char(1) CHECK (sex IN ('M', 'F')),
  sib varchar(5),
  PRIMARY KEY (lamb_id)
);")


```


#### I populated the new table with data (ones and zeros for now).

```{r master csv}

Master <- read.csv("~/WILD6900sp21/Floyd_project_database/Master.csv") 

```


```{r}

dbWriteTable(fpd, "Master", Master, append = T)

```

#### I then repeated these steps for each of the tables. I had to do it in the right order in order for the foreign keys to be referenced correctly. 

# Killsites table:

```{r, eval=FALSE}

dbExecute(fpd, "CREATE TABLE Killsites (
killsite_id INTEGER PRIMARY KEY AUTOINCREMENT,
lamb_id varchar(5),
date text,
time INTEGER,
personnel INTEGER,
utm_x INTEGER,
utm_y INTEGER,
mort_date text,
carcass_present INTEGER,
collar_recovered INTEGER,
cod INTEGER,
scavenging INTEGER,
habitat_type INTEGER,
elevation INTEGER,
slope INTEGER,
aspect INTEGER,
body_condition INTEGER,
dna INTEGER,
liver INTEGER,
esophagus INTEGER,
predator_species INTEGER,
other_cod INTEGER,
FOREIGN KEY(lamb_id) REFERENCES Master(lamb_id)
);")

```

```{r}

Killsites <- read.csv("~/WILD6900sp21/Floyd_project_database/killsites.csv") 

```



```{r, eval = F}

dbWriteTable(fpd, "Killsites", Killsites, append = T)

```

# Collars Table:

```{r, eval=FALSE}

dbExecute(fpd, "CREATE TABLE Collars (
collar_id INTEGER PRIMARY KEY AUTOINCREMENT,
collar_freq varchar(6),
brand text,
test INTEGER
);")

```

```{r}

Collars <- read.csv("~/WILD6900sp21/Floyd_project_database/Collars.csv") 

```




```{r, eval= FALSE}

dbWriteTable(fpd, "Collars", Collars, append = T)

```

# Band Data Table

```{r, eval=FALSE}

dbExecute(fpd, "CREATE TABLE banddata (
band INTEGER PRIMARY KEY AUTOINCREMENT,
rancher text,
location text,
head INTEGER,
range_date text,
guardian integer
);")

```

```{r, eval=FALSE}

banddata <- read.csv("~/WILD6900sp21/Floyd_project_database/banddata.csv") 

```


```{r, eval=FALSE}

dbWriteTable(fpd, "banddata", banddata, append = T)

```

# Tagging Table:

```{r, eval=FALSE}

dbExecute(fpd, "CREATE TABLE Tagging (
tag_id INTEGER PRIMARY KEY AUTOINCREMENT,
lamb_id varchar(5),
collar_id INTEGER,
band INTEGER,
deployment text,
recovery INTEGER,
FOREIGN KEY(lamb_id) REFERENCES Master(lamb_id)
FOREIGN KEY(collar_id) REFERENCES Collars(collar_id)
FOREIGN KEY(band) REFERENCES Banddata(band)
);")
```

```{r}

Tagging <- read.csv("~/WILD6900sp21/Floyd_project_database/Tagging.csv") 
```

```{r}

dbWriteTable(fpd, "Tagging", Tagging, append = T)
```

<!--chapter:end:01-Floyd_Assignment6.Rmd-->

# Literature

Here is a review of existing methods.

<!--chapter:end:02-literature.Rmd-->

# Methods

We describe our methods in this chapter.

<!--chapter:end:03-method.Rmd-->

# Applications

Some _significant_ applications are demonstrated in this chapter.

## Example one

## Example two

<!--chapter:end:04-application.Rmd-->

# Final Words

We have finished a nice book.

<!--chapter:end:05-summary.Rmd-->

`r if (knitr::is_html_output()) '
# References {-}
'`

<!--chapter:end:06-references.Rmd-->

